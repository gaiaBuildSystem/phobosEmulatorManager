#!/bin/bash

if [ ! -e /dev/kvm ]; then
    echo "⚠️ KVM module not found. The emulator will run in software mode."
    export NO_KVM=1
fi

if [ ! command -v docker &> /dev/null ]; then
    echo "❌ Docker is not installed."
    echo "Please install Docker before running this script."
    exit 1
fi

# get the arch and set the tag accordingly
ARCH=$(uname -m)

if [ "$ARCH" == "x86_64" ]; then
    export TAG="latest"
elif [ "$ARCH" == "aarch64" ]; then
    export TAG="arm64-v2"
else
    echo "❌ Unsupported architecture: $ARCH"
    echo "Please run this script on an x86_64 or aarch64 machine."
    exit 1
fi

# make to sure that we have ~/.pem folder
if [ ! -d ~/.pem ]; then
    mkdir ~/.pem
fi

# make the xhost accessible to the container
xhost + >/dev/null 2>&1 || true

# check if we are passing an argument
# if so, the argument need to be a valid file path
if [ $# -eq 1 ]; then
    # Check if the provided path is a file and is absolute
    if [ ! -f "$1" ] || [[ "$1" != /* ]]; then
        echo "❌ Invalid file path: $1"
        echo "Please provide a valid absolute file path."
        exit 69
    fi

    export PHOBOS_LOCAL_IMG_PATH="$1"
else
    # if no argument is passed, we use the default path
    export PHOBOS_LOCAL_IMG_PATH="/opt/phobos-emulator-manager"
fi

if [ -z "$WSL_DISTRO_NAME" ]; then

    if [ -z "$NO_KVM" ]; then
        docker compose \
            -f /opt/phobos-emulator-manager/docker-compose.yml \
            run -it --rm phobos-emulator-manager
    else
         docker compose \
            -f /opt/phobos-emulator-manager/docker-compose.yml \
            run -it --rm phobos-emulator-manager-no-kvm
    fi
else

    if [ -z "$NO_KVM" ]; then
        docker compose \
            -f /opt/phobos-emulator-manager/docker-compose.yml \
            run -it --rm phobos-emulator-manager-wsl
    else
         docker compose \
            -f /opt/phobos-emulator-manager/docker-compose.yml \
            run -it --rm phobos-emulator-manager-no-kvm-wsl
    fi
fi

# remove the xhost access
xhost - >/dev/null 2>&1 || true
